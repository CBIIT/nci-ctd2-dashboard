/*
 * CTD2 Dashboard API
 * API access to CTD2 Dashboard
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ocg@mail.nih.gov
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * Observation
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-05-14T22:43:55.759Z")
public class Observation {
  @SerializedName("submission_id")
  private String submissionId = null;

  @SerializedName("observation_summary")
  private String observationSummary = null;

  @SerializedName("subject_list")
  private List<ObservationSubjectList> subjectList = null;

  @SerializedName("evidence_list")
  private List<ObservationEvidenceList> evidenceList = null;

  public Observation submissionId(String submissionId) {
    this.submissionId = submissionId;
    return this;
  }

   /**
   * Get submissionId
   * @return submissionId
  **/
  @ApiModelProperty(value = "")
  public String getSubmissionId() {
    return submissionId;
  }

  public void setSubmissionId(String submissionId) {
    this.submissionId = submissionId;
  }

  public Observation observationSummary(String observationSummary) {
    this.observationSummary = observationSummary;
    return this;
  }

   /**
   * Get observationSummary
   * @return observationSummary
  **/
  @ApiModelProperty(value = "")
  public String getObservationSummary() {
    return observationSummary;
  }

  public void setObservationSummary(String observationSummary) {
    this.observationSummary = observationSummary;
  }

  public Observation subjectList(List<ObservationSubjectList> subjectList) {
    this.subjectList = subjectList;
    return this;
  }

  public Observation addSubjectListItem(ObservationSubjectList subjectListItem) {
    if (this.subjectList == null) {
      this.subjectList = new ArrayList<ObservationSubjectList>();
    }
    this.subjectList.add(subjectListItem);
    return this;
  }

   /**
   * Get subjectList
   * @return subjectList
  **/
  @ApiModelProperty(value = "")
  public List<ObservationSubjectList> getSubjectList() {
    return subjectList;
  }

  public void setSubjectList(List<ObservationSubjectList> subjectList) {
    this.subjectList = subjectList;
  }

  public Observation evidenceList(List<ObservationEvidenceList> evidenceList) {
    this.evidenceList = evidenceList;
    return this;
  }

  public Observation addEvidenceListItem(ObservationEvidenceList evidenceListItem) {
    if (this.evidenceList == null) {
      this.evidenceList = new ArrayList<ObservationEvidenceList>();
    }
    this.evidenceList.add(evidenceListItem);
    return this;
  }

   /**
   * Get evidenceList
   * @return evidenceList
  **/
  @ApiModelProperty(value = "")
  public List<ObservationEvidenceList> getEvidenceList() {
    return evidenceList;
  }

  public void setEvidenceList(List<ObservationEvidenceList> evidenceList) {
    this.evidenceList = evidenceList;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Observation observation = (Observation) o;
    return Objects.equals(this.submissionId, observation.submissionId) &&
        Objects.equals(this.observationSummary, observation.observationSummary) &&
        Objects.equals(this.subjectList, observation.subjectList) &&
        Objects.equals(this.evidenceList, observation.evidenceList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(submissionId, observationSummary, subjectList, evidenceList);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Observation {\n");
    
    sb.append("    submissionId: ").append(toIndentedString(submissionId)).append("\n");
    sb.append("    observationSummary: ").append(toIndentedString(observationSummary)).append("\n");
    sb.append("    subjectList: ").append(toIndentedString(subjectList)).append("\n");
    sb.append("    evidenceList: ").append(toIndentedString(evidenceList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

