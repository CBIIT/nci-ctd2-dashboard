/*
 * CTD2 Dashboard API
 * API access to CTD2 Dashboard
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ocg@mail.nih.gov
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Observation;
import io.swagger.client.model.SubjectObservationCount;
import io.swagger.client.model.SubjectXref;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Subject
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-05-14T22:43:55.759Z")
public class Subject {
  @SerializedName("class")
  private String propertyClass = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("synonyms")
  private List<String> synonyms = null;

  @SerializedName("xref")
  private List<SubjectXref> xref = null;

  @SerializedName("roles")
  private List<String> roles = null;

  @SerializedName("observation_count")
  private SubjectObservationCount observationCount = null;

  @SerializedName("observations")
  private List<Observation> observations = null;

  public Subject propertyClass(String propertyClass) {
    this.propertyClass = propertyClass;
    return this;
  }

   /**
   * Get propertyClass
   * @return propertyClass
  **/
  @ApiModelProperty(required = true, value = "")
  public String getPropertyClass() {
    return propertyClass;
  }

  public void setPropertyClass(String propertyClass) {
    this.propertyClass = propertyClass;
  }

  public Subject name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Subject synonyms(List<String> synonyms) {
    this.synonyms = synonyms;
    return this;
  }

  public Subject addSynonymsItem(String synonymsItem) {
    if (this.synonyms == null) {
      this.synonyms = new ArrayList<String>();
    }
    this.synonyms.add(synonymsItem);
    return this;
  }

   /**
   * Get synonyms
   * @return synonyms
  **/
  @ApiModelProperty(value = "")
  public List<String> getSynonyms() {
    return synonyms;
  }

  public void setSynonyms(List<String> synonyms) {
    this.synonyms = synonyms;
  }

  public Subject xref(List<SubjectXref> xref) {
    this.xref = xref;
    return this;
  }

  public Subject addXrefItem(SubjectXref xrefItem) {
    if (this.xref == null) {
      this.xref = new ArrayList<SubjectXref>();
    }
    this.xref.add(xrefItem);
    return this;
  }

   /**
   * Get xref
   * @return xref
  **/
  @ApiModelProperty(value = "")
  public List<SubjectXref> getXref() {
    return xref;
  }

  public void setXref(List<SubjectXref> xref) {
    this.xref = xref;
  }

  public Subject roles(List<String> roles) {
    this.roles = roles;
    return this;
  }

  public Subject addRolesItem(String rolesItem) {
    if (this.roles == null) {
      this.roles = new ArrayList<String>();
    }
    this.roles.add(rolesItem);
    return this;
  }

   /**
   * Get roles
   * @return roles
  **/
  @ApiModelProperty(value = "")
  public List<String> getRoles() {
    return roles;
  }

  public void setRoles(List<String> roles) {
    this.roles = roles;
  }

  public Subject observationCount(SubjectObservationCount observationCount) {
    this.observationCount = observationCount;
    return this;
  }

   /**
   * Get observationCount
   * @return observationCount
  **/
  @ApiModelProperty(required = true, value = "")
  public SubjectObservationCount getObservationCount() {
    return observationCount;
  }

  public void setObservationCount(SubjectObservationCount observationCount) {
    this.observationCount = observationCount;
  }

  public Subject observations(List<Observation> observations) {
    this.observations = observations;
    return this;
  }

  public Subject addObservationsItem(Observation observationsItem) {
    if (this.observations == null) {
      this.observations = new ArrayList<Observation>();
    }
    this.observations.add(observationsItem);
    return this;
  }

   /**
   * Get observations
   * @return observations
  **/
  @ApiModelProperty(value = "")
  public List<Observation> getObservations() {
    return observations;
  }

  public void setObservations(List<Observation> observations) {
    this.observations = observations;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Subject subject = (Subject) o;
    return Objects.equals(this.propertyClass, subject.propertyClass) &&
        Objects.equals(this.name, subject.name) &&
        Objects.equals(this.synonyms, subject.synonyms) &&
        Objects.equals(this.xref, subject.xref) &&
        Objects.equals(this.roles, subject.roles) &&
        Objects.equals(this.observationCount, subject.observationCount) &&
        Objects.equals(this.observations, subject.observations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(propertyClass, name, synonyms, xref, roles, observationCount, observations);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Subject {\n");
    
    sb.append("    propertyClass: ").append(toIndentedString(propertyClass)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    synonyms: ").append(toIndentedString(synonyms)).append("\n");
    sb.append("    xref: ").append(toIndentedString(xref)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    observationCount: ").append(toIndentedString(observationCount)).append("\n");
    sb.append("    observations: ").append(toIndentedString(observations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

