/*
 * CTD2 Dashboard API
 * API access to CTD2 Dashboard
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ocg@mail.nih.gov
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.InlineResponse200;
import io.swagger.client.model.InlineResponse2001;
import io.swagger.client.model.Observation;
import io.swagger.client.model.ObservationEvidenceList;
import io.swagger.client.model.Subject;
import org.junit.Test;

import java.util.List;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

/**
 * API tests for DefaultApi
 */

public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    
    /**
     * returns observations for a subject
     *
     * Returns a list observations associated with a subject
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void browseTest() throws ApiException {
        String subjectClass = "tissue";
        String subjectName = "c43295";
        List<String> center = null;
        List<String> role = null;
        List<Integer> tier = null;
        Integer maximum = null;
        Subject response = api.browse(subjectClass, subjectName, center, role, tier, maximum);
        assertEquals(subjectClass,response.getPropertyClass());
        
        subjectClass = "gene";
        subjectName = "TP53";
        response = api.browse(subjectClass, subjectName, center, role, tier, maximum);
        assertEquals(subjectName,response.getName());
        assertEquals(subjectClass,response.getPropertyClass());
        
    }
    
    /**
     * returns a list of centers
     *
     * Returns a list of centers and their submissions
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void centersTest() throws ApiException {
        List<InlineResponse200> response = api.centers();
        
        assertEquals(13, response.size());
    }
    
    /**
     * Search Dashboard
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void searchTermGetTest() throws ApiException {
        String term = "TP53";
        List<String> center = null;
        List<String> role = null;
        List<Integer> tier = null;
        Integer maximum = null;
        List<Subject> response = api.searchTermGet(term, center, role, tier, maximum);

        System.out.println(response);
    }
    
    /**
     * returns content of a submission
     *
     * Returns a submission description and a list observations in a submission
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void submissionTest() throws ApiException {
        String submissionId = "20160306-broad-acme-lineage";
        Integer maximum = null;
        InlineResponse2001 response = api.submission(submissionId, maximum);

        for (Observation obs : response.getObservations()){
        	assertEquals(submissionId, obs.getSubmissionId());
        	for (ObservationEvidenceList ev: obs.getEvidenceList()){
        		assertNotNull(ev.getValue());
        	}
        }

    }
    
}
